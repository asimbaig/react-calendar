{"version":3,"sources":["Components/Auth/Auth.js"],"names":["connect","state","isAuthenticated","token","authRedirectPath","dispatch","onAuth","email","password","isSignup","auth","onSetAuthRedirectPath","setAuthRedirectPath","props","useState","setIsSignup","useForm","register","handleSubmit","errors","useEffect","to","className","onSubmit","data","type","name","ref","required","maxLength","placeholder","style","color","variant","onClick"],"mappings":"wMAiGeA,uBAfS,SAACC,GACvB,MAAO,CACLC,gBAAiC,OAAhBD,EAAME,MACvBC,iBAAkBH,EAAMG,qBAID,SAACC,GAC1B,MAAO,CAELC,OAAQ,SAAEC,EAAOC,EAAUC,GAAnB,OAAiCJ,EAAUK,YAAMH,EAAOC,EAAUC,KAC1EE,sBAAuB,kBAAMN,EAAUO,YAAqB,UAIjDZ,EAzFF,SAACa,GAAW,IAAD,EACUC,oBAAS,GADnB,mBACfL,EADe,KACLM,EADK,OAEqBC,cAAnCC,EAFc,EAEdA,SAAUC,EAFI,EAEJA,aAAcC,EAFV,EAEUA,OAEhCC,qBAAU,WACwB,MAA3BP,EAAMT,kBACTS,EAAMF,0BAER,IAgBF,OAJIE,EAAMX,iBACO,cAAC,IAAD,CAAUmB,GAAIR,EAAMT,mBAInC,sBAAKkB,UAAU,OAAf,UACE,uBAAMC,SAAUL,GAhBH,SAACM,GAEhBX,EAAMP,OAAOkB,EAAKjB,MAAOiB,EAAKhB,SAAUC,MActC,UACE,sBAAKa,UAAU,iBAAf,UACE,uBAAOA,UAAU,0BAAjB,mBACA,sBAAKA,UAAU,YAAf,UACE,uBACEG,KAAK,QACLH,UAAU,eACVI,KAAK,QACLC,IAAKV,EAAS,CAAEW,UAAU,EAAMC,UAAW,MAC3CC,YAAY,UAEbX,EAAOZ,OACN,mBAAGwB,MAAO,CAAEC,MAAO,OAAnB,oCAON,sBAAKV,UAAU,iBAAf,UACE,uBAAOA,UAAU,0BAAjB,sBACA,sBAAKA,UAAU,YAAf,UACE,uBACEG,KAAK,WACLH,UAAU,eACVI,KAAK,WACLC,IAAKV,EAAS,CAAEW,UAAU,EAAMC,UAAW,MAC3CC,YAAY,aAEbX,EAAOX,UACN,mBAAGuB,MAAO,CAAEC,MAAO,OAAnB,wCAMN,cAAC,IAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,uBAKF,eAAC,IAAD,CAAQH,UAAU,OAAOW,QAAQ,UAAUR,KAAK,SAASS,QApD/B,WAC5BnB,GAAaN,IAmDX,uBACaA,EAAW,SAAW","file":"static/js/3.b85bda59.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Auth.css\";\r\nimport { auth, setAuthRedirectPath } from \"../../store/actions/index\";\r\n\r\nconst Auth = (props) => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  useEffect(()=>{\r\n    if ( props.authRedirectPath !== '/' ) {\r\n      props.onSetAuthRedirectPath();\r\n    }\r\n  },[]);\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(JSON.stringify(data));\r\n    props.onAuth(data.email, data.password, isSignup);\r\n  };\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsSignup(!isSignup);\r\n  };\r\n\r\n  let authRedirect = null;\r\n  if (props.isAuthenticated) {\r\n    authRedirect = <Redirect to={props.authRedirectPath} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Auth\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-sm-2 col-form-label\">Email</label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n              placeholder=\"Email\"\r\n            />\r\n            {errors.email && (\r\n              <p style={{ color: \"red\" }}>\r\n                Email is rquired\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-sm-2 col-form-label\">Password</label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n              placeholder=\"Password\"\r\n            />\r\n            {errors.password && (\r\n              <p style={{ color: \"red\" }}>\r\n                Password is required\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n\r\n      <Button className=\"mt-2\" variant=\"primary\" type=\"button\" onClick={switchAuthModeHandler}>\r\n        SWITCH TO {isSignup ? \"SIGNIN\" : \"SIGNUP\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.token !== null,\r\n    authRedirectPath: state.authRedirectPath\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // onChangepassword: ( email ) => dispatch( changePassword( email ) ),\r\n    onAuth: ( email, password, isSignup ) => dispatch( auth( email, password, isSignup ) ),\r\n    onSetAuthRedirectPath: () => dispatch( setAuthRedirectPath( '/' ) )\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n"],"sourceRoot":""}